info:
  description: a music management tool
  title: MusicTeam
  version: 0.1.0
paths:
  /:
    get:
      operationId: index
      responses:
        '500':
          $ref: '#/components/responses/error'
        '200':
          content:
            application/json:
              schema:
                type: object
  /admin/db-upgrade/{ver}:
    post:
      operationId: db_upgrade
      responses:
        '500':
          $ref: '#/components/responses/error'
        '200':
          content:
            application/json:
              schema:
                type: object
    parameters:
    - name: ver
      in: path
      required: true
      schema:
        type: string
  /auth/callback:
    get:
      operationId: auth.auth_callback
      responses:
        '500':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '302':
          $ref: '#/components/responses/Found'
  /auth/google:
    get:
      operationId: auth.auth_google
      responses:
        '500':
          $ref: '#/components/responses/error'
        '302':
          $ref: '#/components/responses/Found'
  /auth/login:
    post:
      operationId: auth.auth_login
      responses:
        '500':
          $ref: '#/components/responses/error'
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '403':
          $ref: '#/components/responses/Forbidden'
  /auth/logout:
    post:
      operationId: auth.auth_logout
      responses:
        '500':
          $ref: '#/components/responses/error'
        '204':
          $ref: '#/components/responses/NoContent'
  /auth/session:
    get:
      operationId: auth.auth_session
      responses:
        '500':
          $ref: '#/components/responses/error'
        '200':
          content:
            application/json:
              schema: &id002
                $ref: '#/components/schemas/User'
        '204':
          $ref: '#/components/responses/NoContent'
  /songs:
    get:
      operationId: songs.list_songs
      responses:
        '500':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SongList'
    post:
      operationId: songs.new_song
      responses:
        '500':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '200':
          content:
            application/json:
              schema: &id001
                $ref: '#/components/schemas/Song'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewSong'
  /songs/{song_id}:
    get:
      operationId: songs.get_song
      responses:
        '500':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '200':
          content:
            application/json:
              schema: *id001
    put:
      operationId: songs.update_song
      responses:
        '500':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '204':
          $ref: '#/components/responses/NoContent'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSong'
    parameters:
    - name: song_id
      in: path
      required: true
      schema:
        type: string
  /users:
    get:
      operationId: users.list_users
      responses:
        '500':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserList'
  /users/{user_id}:
    get:
      operationId: users.get_user
      responses:
        '500':
          $ref: '#/components/responses/error'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '200':
          content:
            application/json:
              schema: *id002
    parameters:
    - name: user_id
      in: path
      required: true
      schema:
        type: string
openapi: 3.0.2
components:
  schemas:
    LoginResponse:
      properties:
        token:
          title: Token
          type: string
      required:
      - token
      title: LoginResponse
      type: object
    NewSong:
      properties:
        title:
          title: Title
          type: string
        credits:
          title: Credits
          type: string
        ccli_num:
          anyOf:
          - type: integer
          - type: 'null'
          title: CCLI Number
        tags:
          items:
            type: string
          title: Tags
          type: array
      required:
      - title
      - credits
      - ccli_num
      - tags
      title: NewSong
      type: object
    ServerError:
      properties:
        Code:
          title: Code
          type: string
        Message:
          title: Message
          type: string
      required:
      - Code
      - Message
      title: ServerError
      type: object
    Song:
      properties:
        title:
          title: Title
          type: string
        credits:
          title: Credits
          type: string
        ccli_num:
          anyOf:
          - type: integer
          - type: 'null'
          title: CCLI Number
        tags:
          items:
            type: string
          title: Tags
          type: array
        id:
          title: Id
          type: string
        created_on:
          format: date-time
          title: Created On
          type: string
        creator_id:
          title: Creator Id
          type: string
      required:
      - title
      - credits
      - ccli_num
      - tags
      - id
      - created_on
      - creator_id
      title: Song
      type: object
    SongList:
      properties:
        songs:
          items:
            $ref: '#/components/schemas/Song'
          title: Songs
          type: array
      required:
      - songs
      title: SongList
      type: object
    UpdateSong:
      properties:
        title:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Title
        credits:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Credits
        ccli_num:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: CCLI Number
        tags:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
          title: Tags
      title: UpdateSong
      type: object
    User:
      properties:
        id:
          title: Id
          type: string
        name:
          title: Name
          type: string
        provider_id:
          title: Provider Id
          type: string
        email:
          title: Email
          type: string
        picture:
          title: Picture
          type: string
        role:
          enum:
          - admin
          - manager
          - leader
          - viewer
          - pending
          - inactive
          title: Role
          type: string
        api_key:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Api Key
      required:
      - id
      - name
      - provider_id
      - email
      - picture
      - role
      title: User
      type: object
    UserList:
      properties:
        users:
          items:
            $ref: '#/components/schemas/User'
          title: Users
          type: array
      required:
      - users
      title: UserList
      type: object
  responses:
    Error:
      description: Error. Something went wrong on the server side.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServerError'
    Forbidden:
      description: Forbidden. Based on your user permissions, you may not perform
        this operation.
    Found:
      description: Found. The URI of the requested resource has been changed temporarily.
    NoContent:
      description: No Content. The request was successful but there is nothing to
        return.
    NotFound:
      description: Not Found. The requested resource does not exist.
